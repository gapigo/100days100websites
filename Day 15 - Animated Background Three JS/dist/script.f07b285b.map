{"version":3,"sources":["../../node_modules/three/build/three.module.js","script.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","type","listener","_listeners","undefined","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","constructor","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Object","freeze","__proto__","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","theta","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","SRGBToLinear","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb$1","_hslA","_hslB","hue2rgb","p","toComponents","source","Color","isColor","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","size","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","toString","getHSL","hue","saturation","lightness","delta","getRGB","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","toJSON","NAMES","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","needsUpdate","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","encoding","isTexture","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","WebGLRenderTarget","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","u","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix$1","_quaternion$3","Euler","DefaultOrder","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","error","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DefaultMatrixWorldAutoUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputEncoding","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","renderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","scene","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","_createPlanes","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","cameras","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","planesLastChangedTimes","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","getPlanes","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","planesToRemove","lastChangedTime","lastKnownTime","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","__data","cachedObject","chunkSize","chunkOffset","getUniformSize","storage","remainingSizeInChunk","boundary","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","forEach","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","self","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_identity","_mesh","InstancedMesh","setMatrixAt","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CompressedArrayTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","concat","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","RawShaderMaterial","_sheen","_clearcoat","_iridescence","_transmission","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","response","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","isHemisphereLightProbe","sky","ground","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","BoxBufferGeometry","CapsuleBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","revision","__THREE__","THREE","querySelector","innerWidth","innerHeight","appendChild","bg1","clock","animate","anim1","anim2","anim3","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"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","file":"script.f07b285b.map","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '147';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022; // @deprecated since r137\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, x,\n\t\t\t0, 1, y,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb$1 = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\treturn clamp( _rgb$1.r * 255, 0, 255 ) << 16 ^ clamp( _rgb$1.g * 255, 0, 255 ) << 8 ^ clamp( _rgb$1.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\tconst r = _rgb$1.r, g = _rgb$1.g, b = _rgb$1.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\ttarget.r = _rgb$1.r;\n\t\ttarget.g = _rgb$1.g;\n\t\ttarget.b = _rgb$1.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb$1.r } ${ _rgb$1.g } ${ _rgb$1.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb$1.r * 255 ) | 0},${( _rgb$1.g * 255 ) | 0},${( _rgb$1.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DefaultMatrixWorldAutoUpdate; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.DefaultMatrixWorldAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, 1, 0 );\n\t\tcameraPX.lookAt( 1, 0, 0 );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, 1, 0 );\n\t\tcameraNX.lookAt( - 1, 0, 0 );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\tcameraPY.lookAt( 0, 1, 0 );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, 1 );\n\t\tcameraNY.lookAt( 0, - 1, 0 );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\tcameraPZ.lookAt( 0, 0, 1 );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === 3553 || ( textureTarget >= 34069 && textureTarget <= 34074 ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\n\t\t// @deprecated since r137\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return 6403;\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst planes = new Set();\n\t\tconst planesLastChangedTimes = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPlanes = function () {\n\n\t\t\treturn planes;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame.detectedPlanes } );\n\n\t\t\t\tlet planesToRemove = null;\n\n\t\t\t\tfor ( const plane of planes ) {\n\n\t\t\t\t\tif ( ! frame.detectedPlanes.has( plane ) ) {\n\n\t\t\t\t\t\tif ( planesToRemove === null ) {\n\n\t\t\t\t\t\t\tplanesToRemove = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplanesToRemove.push( plane );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( planesToRemove !== null ) {\n\n\t\t\t\t\tfor ( const plane of planesToRemove ) {\n\n\t\t\t\t\t\tplanes.delete( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.delete( plane );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeremoved', data: plane } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const plane of frame.detectedPlanes ) {\n\n\t\t\t\t\tif ( ! planes.has( plane ) ) {\n\n\t\t\t\t\t\tplanes.add( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.set( plane, frame.lastChangedTime );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeadded', data: plane } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst lastKnownTime = planesLastChangedTimes.get( plane );\n\n\t\t\t\t\t\tif ( plane.lastChangedTime > lastKnownTime ) {\n\n\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, plane.lastChangedTime );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planechanged', data: plane } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst value = uniform.value;\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\t\t\tconst info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tconst value = uniform.value;\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\t//\n\n\t\tconst drawRange = geometry.drawRange;\n\t\tconst position = geometry.attributes.position;\n\n\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\tif ( group !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t}\n\n\t\tconst drawCount = drawEnd - drawStart;\n\n\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t//\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nvar AnimationUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n});\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import * as THREE from 'three';\nimport './style.css';\nimport bg1 from './img/bg1.jpg';\nimport bg2 from './img/bg2.jpg';\n\nconst container = document.querySelector('.three_bg');\nconst loader = new THREE.TextureLoader();\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(\n  62,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\n\nconst renderer = new THREE.WebGL1Renderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ncontainer.appendChild(renderer.domElement);\n\nconst geometry = new THREE.PlaneGeometry(14, 8, 15, 9);\nconst material = new THREE.MeshBasicMaterial({\n  map: loader.load(bg1),\n});\n\nconst mesh = new THREE.Mesh(geometry, material);\nscene.add(mesh);\ncamera.position.z = 5;\n\nconst count = geometry.attributes.position.count;\nconst clock = new THREE.Clock();\n\nfunction animate() {\n  const time = clock.getElapsedTime();\n  for (let i = 0; i < count; i++) {\n    const x = geometry.attributes.position.getX(i);\n    const y = geometry.attributes.position.getY(i);\n\n    const anim1 = 0.25 * Math.sin(x + time * 0.22);\n    const anim2 = 0.35 * Math.sin(y * 1 + time * 0.22);\n    const anim3 = 0.1 * Math.sin(x * 15 + time * 0.22);\n\n    geometry.attributes.position.setZ(i, anim1 + anim2 + anim3);\n    geometry.computeVertexNormals();\n    geometry.attributes.position.needsUpdate = true;\n  }\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\n\nanimate();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}